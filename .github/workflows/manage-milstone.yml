    
name: Manage Milestone for Release

on:
  push:
    branches:
      - main

jobs:
  manage-milestone-for-release:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release:')
    steps:
      - uses: actions/checkout@v3
      - name: Set Milestone to close
        run: |
          CURRENT_VERSION="$(cat .app-version)"
          
          VERSION_REGEX="([0-9]+\.[0-9]+\.[0-9]+)-([0-9]+)"
          if [[ $CURRENT_VERSION =~ $VERSION_REGEX ]]; then
            BUILD_NAME="${BASH_REMATCH[1]}"
            BUILD_NUMBER="${BASH_REMATCH[2]}"
          fi
          echo "CLOSE_MILESTONE=${BUILD_NAME}" >> $GITHUB_ENV
        shell: bash
      - name: Close Current Milestone
        uses: Beakyn/gha-close-milestone@v1.1.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repository: ${{ github.repository }}
          milestone-title: ${{ env.CLOSE_MILESTONE }}
      - name: Set Milestone to create
        run: |
          CURRENT_VERSION="$(cat .app-version)"
          VERSION_REGEX="([0-9]+).([0-9]+).([0-9]+)-([0-9]+)"

          if [[ $CURRENT_VERSION =~ $VERSION_REGEX ]]; then
            VERSION_MAJOR=${BASH_REMATCH[1]}
            VERSION_MINOR=${BASH_REMATCH[2]}
          fi
          MILESTONE="$VERSION_MAJOR.$((VERSION_MINOR + 2)).0"
          echo "CREATE_MILESTONE=${MILESTONE}" >> $GITHUB_ENV
        shell: bash
      - name: Create New Milestone
        uses: WyriHaximus/github-action-create-milestone@v1
        with:
          title: ${{ env.CREATE_MILESTONE }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"